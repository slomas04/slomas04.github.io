var C=(r,e)=>(e=Symbol[r])?e:Symbol.for("Symbol."+r),D=r=>{throw TypeError(r)};var b=(r,e,s)=>{if(e!=null){typeof e!="object"&&typeof e!="function"&&D("Object expected");var i,o;s&&(i=e[C("asyncDispose")]),i===void 0&&(i=e[C("dispose")],s&&(o=i)),typeof i!="function"&&D("Object not disposable"),o&&(i=function(){try{o.call(this)}catch(n){return Promise.reject(n)}}),r.push([s,i,e])}else s&&r.push([s]);return e},S=(r,e,s)=>{var i=typeof SuppressedError=="function"?SuppressedError:function(a,d,u,t){return t=Error(u),t.name="SuppressedError",t.error=a,t.suppressed=d,t},o=a=>e=s?new i(a,e,"An error was suppressed during disposal"):(s=!0,a),n=a=>{for(;a=r.pop();)try{var d=a[1]&&a[1].call(a[2]);if(a[0])return Promise.resolve(d).then(n,u=>(o(u),n()))}catch(u){o(u)}if(s)throw e};return n()};import{compile as M,env as _,Features as v,Instrumentation as P,normalizePath as B,optimize as U}from"@tailwindcss/node";import{clearRequireCache as V}from"@tailwindcss/node/require-cache";import{Scanner as G}from"@tailwindcss/oxide";import w from"node:fs/promises";import p from"node:path";var f=_.DEBUG,J=/[?&](?:worker|sharedworker|raw|url)\b/,A=/\?commonjs-proxy/,K=/[?&]index\=\d+\.css$/;function O(){let r=[],e=null,s=!1,i=!1,o=new y(n=>{let a=e.createResolver({...e.resolve,extensions:[".css"],mainFields:["style"],conditions:["style","development|production"],tryIndex:!1,preferRelative:!0});function d(l,c){return a(l,c,!0,s)}let u=e.createResolver(e.resolve);function t(l,c){return u(l,c,!0,s)}return new R(n,e.root,d,t)});return[{name:"@tailwindcss/vite:scan",enforce:"pre",configureServer(n){r.push(n)},async configResolved(n){e=n,i=e.build.cssMinify!==!1,s=e.build.ssr!==!1&&e.build.ssr!==void 0}},{name:"@tailwindcss/vite:generate:serve",apply:"serve",enforce:"pre",async transform(n,a,d){var c=[];try{if(!x(a))return;let u=b(c,new P);f&&u.start("[@tailwindcss/vite] Generate CSS (serve)");let t=o.get(a);let l=await t.generate(n,F=>this.addWatchFile(F),u);if(!l)return o.delete(a),n;f&&u.end("[@tailwindcss/vite] Generate CSS (serve)");return{code:l}}catch(m){var g=m,h=!0}finally{S(c,g,h)}}},{name:"@tailwindcss/vite:generate:build",apply:"build",enforce:"pre",async transform(n,a){var l=[];try{if(!x(a))return;let d=b(l,new P);f&&d.start("[@tailwindcss/vite] Generate CSS (build)");let u=o.get(a);let t=await u.generate(n,h=>this.addWatchFile(h),d);if(!t)return o.delete(a),n;f&&d.end("[@tailwindcss/vite] Generate CSS (build)");f&&d.start("[@tailwindcss/vite] Optimize CSS");t=U(t,{minify:i});f&&d.end("[@tailwindcss/vite] Optimize CSS");return{code:t}}catch(c){var m=c,g=!0}finally{S(l,m,g)}}}]}function T(r){let[e]=r.split("?",2);return p.extname(e).slice(1)}function x(r){return r.includes("/.vite/")?void 0:(T(r)==="css"||r.includes("&lang.css")||r.match(K))&&!J.test(r)&&!A.test(r)}function E(r){return p.resolve(r.replace(/\?.*$/,""))}var y=class extends Map{constructor(s){super();this.factory=s}get(s){let i=super.get(s);return i===void 0&&(i=this.factory(s,this),this.set(s,i)),i}},R=class{constructor(e,s,i,o){this.id=e;this.base=s;this.customCssResolver=i;this.customJsResolver=o}compiler;scanner;candidates=new Set;buildDependencies=new Map;async generate(e,s,i){let o=E(this.id);function n(t){t!==o&&(/[\#\?].*\.svg$/.test(t)||s(t))}let a=this.requiresBuild(),d=p.dirname(p.resolve(o));if(!this.compiler||!this.scanner||await a){V(Array.from(this.buildDependencies.keys())),this.buildDependencies.clear(),this.addBuildDependency(E(o)),f&&i.start("Setup compiler");let t=[];this.compiler=await M(e,{base:d,shouldRewriteUrls:!0,onDependency:c=>{n(c),t.push(this.addBuildDependency(c))},customCssResolver:this.customCssResolver,customJsResolver:this.customJsResolver}),await Promise.all(t),f&&i.end("Setup compiler"),f&&i.start("Setup scanner");let l=(this.compiler.root==="none"?[]:this.compiler.root===null?[{base:this.base,pattern:"**/*",negated:!1}]:[{...this.compiler.root,negated:!1}]).concat(this.compiler.sources);this.scanner=new G({sources:l}),f&&i.end("Setup scanner")}else for(let t of this.buildDependencies.keys())n(t);if(!(this.compiler.features&(v.AtApply|v.JsPluginCompat|v.ThemeFunction|v.Utilities)))return!1;if(this.compiler.features&v.Utilities){f&&i.start("Scan for candidates");for(let t of this.scanner.scan())this.candidates.add(t);f&&i.end("Scan for candidates")}if(this.compiler.features&v.Utilities){for(let t of this.scanner.files)n(t);for(let t of this.scanner.globs){if(t.pattern[0]==="!")continue;let l=p.relative(this.base,t.base);l[0]!=="."&&(l="./"+l),l=B(l),n(p.posix.join(l,t.pattern));let c=this.compiler.root;if(c!=="none"&&c!==null){let m=B(p.resolve(c.base,c.pattern));if(!await w.stat(m).then(h=>h.isDirectory(),()=>!1))throw new Error(`The path given to \`source(\u2026)\` must be a directory but got \`source(${m})\` instead.`)}}}f&&i.start("Build CSS");let u=this.compiler.build([...this.candidates]);return f&&i.end("Build CSS"),u}async addBuildDependency(e){let s=null;try{s=(await w.stat(e)).mtimeMs}catch{}this.buildDependencies.set(e,s)}async requiresBuild(){for(let[e,s]of this.buildDependencies){if(s===null)return!0;try{if((await w.stat(e)).mtimeMs>s)return!0}catch{return!0}}return!1}};export{O as default};
